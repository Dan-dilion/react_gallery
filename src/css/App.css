h1 {

}

h3 {
	margin: 0px;
}

li {
	float: left;
}


#root {
  background-color: #0000;

}

.home-container {
	color: #fed5;
}

.app {
  padding-top: 13%;
  background-color: #000a;
  text-align: center;

}


.disable-selection {
     -moz-user-select: none; /* Firefox */
      -ms-user-select: none; /* Internet Explorer */
   -khtml-user-select: none; /* KHTML browsers (e.g. Konqueror) */
  -webkit-user-select: none; /* Chrome, Safari, and Opera */
  -webkit-touch-callout: none; /* Disable Android and iOS callouts*/
}

/* .container {
	display: block;
	max-width: 100%;
	margin: auto;
	color: #fed5;
	position: relative;
} */

.app-link {
  color: #fed5;
}

@-webkit-keyframes fadeIn { from { opacity:0; transform: scale(0.8);} to { opacity:1; transform: scale(1);} }
@-moz-keyframes fadeIn { from { opacity:0; transform: scale(0.8); } to { opacity:1; transform: scale(1);} }
@keyframes fadeIn { from { opacity:0; transform: scale(0.8);} to { opacity:1; transform: scale(1);} }

.fade-in {
	opacity:0;  /* make things invisible upon start */
	-webkit-animation:fadeIn ease-in-out 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
	-moz-animation:fadeIn ease-in-out 1;
	animation:fadeIn ease-in-out 1;

	-webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;

	-webkit-animation-duration:.5s;
	-moz-animation-duration:.5s;
	animation-duration:.5s;
}
